package Vistas;

import Datos.CiudadDatos;
import Entidades.Ciudad;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucia
 */
public class SelecionarRuta extends javax.swing.JInternalFrame {

    private DefaultTableModel modeloOri = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
    private DefaultTableModel modeloDest = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    /**
     * Creates new form SelecionarRuta
     */
    public SelecionarRuta() {
        initComponents();
        textMod(true, false, false);
        cargarComboBoxCiu();
        armarCabezera1(modeloOri);
        armarCabezera2(modeloDest);
        modeloOri.setRowCount(0);
        modeloDest.setRowCount(0);
        cargarTabla(modeloOri);
        cargarTabla(modeloDest);
        this.jtOrigen.setSelectionBackground(Color.GREEN);
        this.jtDestino.setSelectionBackground(Color.CYAN);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/Imagenes/ciu2.jpg"));
        Image image = icon.getImage();
        jDesktopPane1 = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        jbDestino = new javax.swing.JButton();
        jbOrigen = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtOrigen = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtDestino = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jcOrigen = new javax.swing.JComboBox<>();
        jcDestino = new javax.swing.JComboBox<>();
        jbFinalizar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(600, 660));

        jDesktopPane1.setPreferredSize(new java.awt.Dimension(700, 600));

        jbDestino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pick.png"))); // NOI18N
        jbDestino.setText("Elejir");
        jbDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDestinoActionPerformed(evt);
            }
        });

        jbOrigen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pick.png"))); // NOI18N
        jbOrigen.setText("Elejir");
        jbOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOrigenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 0));
        jLabel7.setText("Ciudad Origen");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Selecionar Ruta");

        jtOrigen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtOrigen);

        jtDestino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtDestino);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 0));
        jLabel8.setText("Ciudad Destino");

        jcOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcOrigenActionPerformed(evt);
            }
        });

        jcDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcDestinoActionPerformed(evt);
            }
        });

        jbFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/check.png"))); // NOI18N
        jbFinalizar.setText("Finalizar");
        jbFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinalizarActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jbDestino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jbOrigen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jcOrigen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jcDestino, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jbFinalizar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(12, 12, 12)
                        .addComponent(jcDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbOrigen))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jcOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbFinalizar)
                            .addComponent(jbDestino))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jbOrigen))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jbDestino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbFinalizar)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcOrigenActionPerformed
        // Buscar Combox CiuOri
        modeloOri.setRowCount(0);
        Ciudad ciuSelecionada = (Ciudad) this.jcOrigen.getSelectedItem();
        for (Ciudad ciu : CiudadDatos.listarCiuxTrue()) {
            if (ciu.getNombre().equalsIgnoreCase(ciuSelecionada.getNombre())) {
                modeloOri.addRow(new Object[]{ciu.getIdCiudad(), ciu.getNombre(), ciu.getProvincia(), ciu.getPais()});
            }
        }
    }//GEN-LAST:event_jcOrigenActionPerformed

    private void jbOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOrigenActionPerformed
        // Selecionar objecto Ciudad de la TablaOrigen
        int filaSeleccionada = this.jtOrigen.getSelectedRow();
        if (filaSeleccionada != -1) { // Verifica si se ha seleccionado una fila válida
            int idCiu = Integer.parseInt(modeloOri.getValueAt(filaSeleccionada, 0).toString());
            CiudadDatos.ciuOriSelecionada = CiudadDatos.buscarCiudadPorId(idCiu);
            modeloDest.removeRow(filaSeleccionada);
            // Actualiza la tabla de destino (jtDestino) con el modeloDest modificado
            jtDestino.setModel(modeloDest);
            // Elimina el objeto seleccionado en el JComboBox jcDestino
            if (jcDestino.getItemCount() > 0) {
                jcDestino.removeItemAt(filaSeleccionada);
            }
            textMod(false, true, false);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para Seleccionar Ciudad", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jbOrigenActionPerformed

    private void jcDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcDestinoActionPerformed
        // Buscar combox2
        modeloDest.setRowCount(0);
        Ciudad ciuSelecionada = (Ciudad) this.jcDestino.getSelectedItem();
        for (Ciudad ciu : CiudadDatos.listarCiuxTrue()) {
            if (ciu.getNombre().equalsIgnoreCase(ciuSelecionada.getNombre())) {
                modeloDest.addRow(new Object[]{ciu.getIdCiudad(), ciu.getNombre(), ciu.getProvincia(), ciu.getPais()});
            }
        }
    }//GEN-LAST:event_jcDestinoActionPerformed

    private void jbDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDestinoActionPerformed
        // Selecionar objecto Ciudad de la TablaDestino
        int filaSeleccionada = this.jtDestino.getSelectedRow();
        if (filaSeleccionada != -1) { // Verifica si se ha seleccionado una fila válida
            int idCiu = Integer.parseInt(modeloDest.getValueAt(filaSeleccionada, 0).toString());
            CiudadDatos.ciuDestSelecionada = CiudadDatos.buscarCiudadPorId(idCiu);
            textMod(false, false, true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para Seleccionar Ciudad", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jbDestinoActionPerformed

    private void jbFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinalizarActionPerformed
        // Finalizar
        CiudadDatos.ciudadesSelecionada = true;
        JOptionPane.showMessageDialog(this, "Gracias por Selecionar las Ciudades, Informacion Completa ", "Se Completo con Exito", JOptionPane.INFORMATION_MESSAGE);
        dispose();
    }//GEN-LAST:event_jbFinalizarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbDestino;
    private javax.swing.JButton jbFinalizar;
    private javax.swing.JButton jbOrigen;
    private javax.swing.JComboBox<Ciudad> jcDestino;
    private javax.swing.JComboBox<Ciudad> jcOrigen;
    private javax.swing.JTable jtDestino;
    private javax.swing.JTable jtOrigen;
    // End of variables declaration//GEN-END:variables

    private void textMod(boolean ok, boolean ok1, boolean okFin) {
        this.jcOrigen.setEnabled(ok);
        this.jtOrigen.setEnabled(ok);
        this.jbOrigen.setEnabled(ok);
        this.jcDestino.setEnabled(ok1);
        this.jtDestino.setEnabled(ok1);
        this.jbDestino.setEnabled(ok1);
        this.jbFinalizar.setEnabled(okFin);
    }

    private void armarCabezera1(DefaultTableModel modelo) {
        modelo.addColumn("IdCiudad");
        modelo.addColumn("Nombre");
        modelo.addColumn("Provincia");
        modelo.addColumn("pais");
        this.jtOrigen.setModel(modelo);
    }

    private void armarCabezera2(DefaultTableModel modelo) {
        modelo.addColumn("IdCiudad");
        modelo.addColumn("Nombre");
        modelo.addColumn("Provincia");
        modelo.addColumn("pais");
        this.jtDestino.setModel(modelo);
    }

    private void cargarComboBoxCiu() {
        for (Ciudad ciu : CiudadDatos.listarCiu()) {
            this.jcOrigen.addItem(ciu);
            this.jcDestino.addItem(ciu);
        }
    }

    private void cargarTabla(DefaultTableModel modelo) {
        for (Ciudad ciu : CiudadDatos.listarCiuxTrue()) {
            int id = ciu.getIdCiudad();
            String nom = ciu.getNombre();
            String prov = ciu.getProvincia();
            String pa = ciu.getPais();
            modelo.addRow(new Object[]{id, nom, prov, pa});
        }
    }
}
